22.07.13: 2228 풀기
2228 문제 내용{

N(1 ≤ N ≤ 100)개의 수로 이루어진 1차원 배열이 있다. 이 배열에서 M(1 ≤ M ≤ ⌈(N/2)⌉)개의 구간을 선택해서, 

구간에 속한 수들의 총 합이 최대가 되도록 하려 한다. 단, 다음의 조건들이 만족되어야 한다.

각 구간은 한 개 이상의 연속된 수들로 이루어진다.

서로 다른 두 구간끼리 겹쳐있거나 인접해 있어서는 안 된다.

정확히 M개의 구간이 있어야 한다. M개 미만이어서는 안 된다.

N개의 수들이 주어졌을 때, 답을 구하는 프로그램을 작성하시오.

}

입력{

첫째 줄에 두 정수 N, M이 주어진다. 

다음 N개의 줄에는 배열을 이루는 수들이 차례로 주어진다. 

배열을 이루는 수들은 -32768 이상 32767 이하의 정수이다.
 }

출력{

첫째 줄에 답을 출력한다.

}

본격적인 dp를 이용하는 문제가 나온 것 같다.

이 문제의 경우 값을 어떻게 나누느냐를 정하고 들어가면 문제를 풀 수 있다.

우선, i번째 그룹을 만들때 i번째 그룹을 어떻게 나누었을 때 최대가 되려는 것을 보려면

i-1번째 그룹을 나누었을 때의 최대값을 보면 된다.

즉, 그룹을 1개로 나누었을 때, 2개, 3개, 4개 이런식으로 그룹을 나눌 때 앞선 결과를 이용하여 재귀적으로 접근 해야 한다.

group[번호][그룹 번호] 번호가 현재 그룹에 있는 경우와 없는 경우로 나눌 수 있고 없는 경우는

group[번호][그룹 번호] = group[번호][그룹 번호 -1] 이렇게 표현할 수 있다.

그렇기에, 어떤 값 i 를 넣을지 않넣을지 판단 하기 위해선 조건에 따라 하나 이상 떨어져 있으며 그 값이 최대값이 되게 하면 되기에

안넣는 경우: group[번호][그룹 번호], 넣는 경우: group[번호][그룹 번호 -1] + sum[i] - sum[k+1]를 비교하면 된다.

이 경우, k는 한 칸 떨어지는 데 사용한 변수이다.

파이썬의 경우 i번째 값을 포함 하는 배열과 포함하지 않는 배열 2개를 만들어서 풀었기에 for 구문을 2개만 사용할 수 있었다.(출처: https://ddiyeon.tistory.com/62)

느낀점{
    파이썬의 경우 훨씬 더 간결하게 입력 받는 것을 잘 활용해야 시간 초과가 나지 않는 것 같다. (import sys ,   input = sys.stdin.readline)

    자바의 경우 값을 입력받는 Scanner와 BufferReader의 사용법을 더 알아보고 이용해야 할 것 같다.
}