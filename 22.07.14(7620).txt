22.07.14: 7620 풀기
7620 문제 내용{
    편집거리

문자열이 주어졌을 때, 이 문자열을 다른 문자열로 바꾸는 편집 스크립트를 작성하려고 한다. 

편집 스크립트에서 사용할 수 있는 명령은 아래와 같이 총 네 가지가 있다.

추가 ('a'): 한 글자를 출력한다. 이 명령은 입력 문자열을 건드리지 않는다.

삭제 ('d'): 한 글자를 삭제한다. 이 명령은 입력 문자열에서 맨 앞 글자를 삭제하고, 아무것도 출력하지 않는다.

수정 ('m'): 한 글자를 수정한다. 즉, 입력 문자열에서 맨 앞 글자를 삭제하고, 바꾼 글자를 출력한다.

복사 ('c'): 한 글자를 복사한다. 입력에서 맨 앞 글자를 삭제하고, 삭제한 그 글자를 출력한다.

가장 짧은 편집 스크립트란, 추가, 삭제, 수정을 가장 적게 사용한 스크립트이다.

두 문자열이 주어졌을 때, 첫 번째 문자열을 두 번째 문자열로 바꾸는 가장 짧은 편집 스크립트를 작성하는 프로그램을 작성하시오. 

}

입력{

두 문자열이 한 줄에 하나씩 주어진다. 각 문자열은 영문알파벳과 숫자로만 이루어져 있으며, 길이는 1보다 크거나 같고, 17000보다 작거나 같다.

 }

출력{

가장 짧은 편집 스크립트를 출력한다. 한 명령을 한 줄에 하나씩 출력하며, 

문제의 괄호에 나와있는 (a, d, m, c)중 하나를 출력하고, 

그 명령을 수행하는데 사용한 글자를 출력한다. (출력할 글자나 삭제할 글자)

가장 짧은 편집 스크립트가 여러 가지인 경우에는 아무거나 출력하면 된다.

}

이번 문제도 dp를 이용한 문제이다.

편집 거리는 유명한 문제라고 한다. dp 문제와 같이 앞선 값을 계속해서 참고하며 현재 값을 갱신하는 방법으로 문제를 해결 할 수 있다.

두개의 문자열을 앞에서 부터 비교해 가며 같은 경우에는 값을 증가시키지 않고(c : 복사) 값이 다른 경우에는 3가지의 경우(삭제, 추가, 수정)를 비교하여 가장 작은 값 + 1 을 받아오면 된다.

주의할 점은 문제에서 제한한 메모리의 크기이다. 문자열이 2개가 존재하며 각 문자열은 최대 17000자 까지 적히기 때문에 배열[17000][17000]을 만들게 되면

메모리를 초과하게 된다. 사실, 배열을 이용할 때 바로 앞선 값만 확인하여 갱신하면 되기에 dp[2][17000]으로 충분하다.

느낀점{
    파이썬의 경우 훨씬 더 간결하게 입력 받는 것을 잘 활용해야 시간 초과가 나지 않는 것 같다. (import sys ,   input = sys.stdin.readline)

    자바의 경우 값을 입력받는 Scanner와 BufferReader의 사용법을 더 알아보고 이용해야 할 것 같다.
}