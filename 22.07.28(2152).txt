22.07.28: 2152 풀기
2152 문제 내용{

  여행 계획 세우기

평소 일로 바쁘던 태희는 휴가를 통해 여행을 다녀오기로 하였다. 우선 태희는 사전 조사를 통해서 여행하려는 도시를 N(1 ≤ N ≤ 10,000)개 선택하였다.

 태희는 비행기를 이용하면 충분히 여행할 수 있을거라 생각했지만, 짐을 꾸리던 중 비행기가 모든 도시들 사이를 다니는 것은 아님을 알게 되었다.

태희는 다시 비행로에 대해 조사를 하였고, 총 M(1 ≤ M ≤ 100,000)개의 비행로가 존재함을 알게 되었다. 각각의 비행로는 한 방향으로의 서비스만을 제공한다. 

태희는 S(1 ≤ S ≤ N)번 도시에서 시작해서 T(1 ≤ T ≤ N)번 도시에서 여행을 끝내기로 하였다. 그리고 태희는 도시와 항공로에 대한 정보를 바탕으로 여행 계획을 세우기로 하였다.

도시와 비행로에 대한 정보가 주어졌을 때, S번 도시에서 T번 도시로 여행을 할 때 최대로 방문할 수 있는 도시의 개수를 구하는 프로그램을 작성하시오.

 각각의 도시는 여행 중에 몇 번이든 방문할 수 있으며, 같은 항공로를 여러 번 이용할 수도 있다. 물론 같은 도시를 여러 번 방문하는 경우는 한 번만 생각하기로 한다.

}

입력{

첫째 줄에 네 정수 N, M, S, T가 주어진다. 다음 M개의 줄에는 각각의 비행로에 대한 정보를 나타내는 서로 다른 두 정수 A, B(1 ≤ A, B ≤ N)가 주어진다.

이는 A번 도시에서 B번 도시로 이동하는 항공로가 존재함을 의미한다.
 }

출력{

첫째 줄에 방문할 수 있는 도시의 최대 개수를 출력한다. 만약 여행 계획을 목표대로 세울 수 없다면 0을 출력한다.

}

이번 문제는 SCC를 이용하여 문제를 해결해야 한다.

타잔 알고리즘을 이용하여 문제를 해결했다. 타잔 알고리즘이란 순환하는 값들의 집합을 찾고 그 집합의 값중 가장 작은 index 번호를 설정하여

stack의 넣어둔 값을 꺼내어가며 index 번호와 동일한 순간에 멈춤과 동시에 scc[scnt++]값을 늘려준다.

순환 되는 곳을 배열로 만들고 각 순환 마다 번호를 붙여주며 시작 지점이 어떤 순환 번호에 속해있는지와 그 순환번호를 이용해서

목적지가 있는 순환 번호로 도달할 수 있는지 체크하면 된다.



느낀점{
    상당히 난관이 많았던 문제다. 특히, 배열 index 접근을 할 때 좀 더 주의해서 해야 될 것 같다.

    또한, python의 경우에 백준 내부 프로그램에서 재귀함수 호출을 1000회 미만으로 설정 했기에 

    이상의 횟수만큼 재귀문을 돌리기 위해서는 sys.setrecursionlimit(10**6)을 사용해야 한다.
    
    또한, pypy3를 이용하여 시간초과를 벗어났었는데 이번에는 오히려 pypy3를 이용하니 메모리초과가 발생하였고

    python3를 이용하여 문제를 해결할 수 있었다. 알아보니 pypy3의 경우 자주 쓰이는 코드를 캐싱하는 기능이 있어서

    메모리를 좀 더 사용하여 저장한다고 한다. 그렇기에 메모리 초과가 발생한 것 같다.

    따라서, 앞으로는 단순 반복문에서는 Python3를 사용하고 복잡한 코드에서느 pypy3를 이용하는 것이 효율적일 것 같다.
    
}